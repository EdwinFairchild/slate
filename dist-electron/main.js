"use strict";const{app:l,BrowserWindow:E,ipcMain:u,dialog:x}=require("electron"),d=require("path"),{exec:S}=require("child_process"),{spawn:$}=require("child_process"),T=require("electron-store"),m=new T;require("fs");const p=new Map;require("date-fns/locale");let h=null,f=null;u.handle("get-tests",()=>(console.log("main.js got test from store:",m.get("tests",[])),f=m.get("saveDirectory",null),m.get("tests",[])));u.handle("save-tests",(t,e)=>(m.set("tests",e),m.set("saveDirectory",f),console.log("main.js  Saved tests:",e),{success:!0}));u.handle("selectDirectory",async()=>{const{canceled:t,filePaths:e}=await x.showOpenDialog({properties:["openDirectory"]});return t||e.length===0?null:(f=e[0],e[0])});function o(t,...e){console.log(`[${t.toUpperCase()}]`,...e)}u.handle("save-selected-device",(t,e)=>{h=e});u.handle("search-devices",async(t,e)=>{let r;l.isPackaged?r=d.join(process.resourcesPath,"python","vxi11-api.py"):r=d.join(__dirname,"../src/services/python/vxi11-api.py"),o("info","Resolved Python script path:",r);try{const{stdout:i}=await new Promise((n,a)=>{S(`python3 ${r} --discover "${e}"`,(g,s,v)=>{g?(o("error","Error running Python script:",v),a(g)):n({stdout:s})})});return o("info","Raw Python output:",i.trim()),JSON.parse(i.trim())}catch(i){return o("error","Error executing discovery:",i),{error:i.message}}});u.handle("test-command",async(t,e)=>{let r;if(l.isPackaged?r=d.join(process.resourcesPath,"python","vxi11-api.py"):r=d.join(__dirname,"../src/services/python/vxi11-api.py"),o("Resolved Python script path:",r),!h||!h.address)return o("error","No device selected!"),"Error: No device selected";const i=h.address;try{const{stdout:n}=await new Promise((a,g)=>{S(`python3 ${r} --ip "${i}" --command "${e}"`,(s,v,w)=>{s?(o("error","Error running Python script:",w),g(s)):a({stdout:v})})});return o("info","Raw Python output:",n.trim()),n.trim()}catch(n){return o("error","Error executing command:",n),`Error: ${n.message}`}});u.handle("start-test",async(t,e)=>{let r;if(l.isPackaged?r=d.join(process.resourcesPath,"python","vxi11-api.py"):r=d.join(__dirname,"../src/services/python/vxi11-api.py"),!h||!h.address)return o("error","No device selected!"),{status:"error",message:"No device selected"};if(!f)return o("error","No save directory selected!"),{status:"error",message:"No save directory selected"};const i=h.address;try{const n=new Date().toISOString(),a=$("python3",[r,"--ip",i,"--start-test",JSON.stringify(e),"--savedir",f]),g=crypto.randomUUID();let s=null;return await new Promise((R,P)=>{a.stdout.on("data",c=>{console.log("Raw logs from Python:",c.toString().trim());try{const y=JSON.parse(c.toString().trim());y.status==="running"&&!s&&(s=y.test_id||g,p.set(s,a),R({id:s,name:e.name,duration:e.duration,startTime:n,endTime:null,status:"running",logFilePath:y.log_file_path}),o("info",`Test started successfully. Log file: ${y.log_file_path}`))}catch(y){console.error("Error parsing Python response:",y.message)}}),a.stderr.on("data",c=>{console.error("Error from Python:",c.toString().trim()),P(c.toString().trim())}),a.on("close",c=>{c!==0&&!s&&P(new Error(`Python script exited with code ${c}`)),s&&(p.delete(s),console.log(`Test ${s} has been removed from ongoingTests.`))})})}catch(n){return o("error","Error executing start-test:",n),{status:"error",message:n.message||"Unknown error"}}});u.handle("stop-test",async(t,e)=>p.has(e)?(p.get(e).kill(),p.delete(e),{status:"success",message:`Test ${e} stopped.`}):{status:"error",message:`Test with ID ${e} not found. Available tests: ${Array.from(p.keys()).join(", ")}`});function _(){const t=new E({width:1500,height:1025,webPreferences:{nodeIntegration:!0,contextIsolation:!0,preload:d.join(__dirname,"preload.js"),contextIsolation:!0,nodeIntegration:!1}}),e=process.env.VITE_DEV_SERVER_URL;e?t.loadURL(e):t.loadFile(d.join(__dirname,"../dist/index.html"))}l.whenReady().then(()=>{_(),l.on("activate",()=>{E.getAllWindows().length===0&&_()})});l.on("window-all-closed",()=>{process.platform!=="darwin"&&l.quit()});l.on("before-quit",()=>{p.forEach((t,e)=>{console.log(`Terminating test: ${e}`),t.kill()})});
